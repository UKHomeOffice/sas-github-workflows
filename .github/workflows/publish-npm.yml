name: 'Increment & Publish - npm'
on:
  workflow_call:
    inputs:
      nodeVersion:
        required: false
        type: string
        default: '18.x'
      installCommand:
        required: false
        type: string
        default: 'ci --ignore-scripts'
      mainLineBranchName:
        required: false
        type: string
        default: main
      tagBranchName:
        required: false
        type: string
        default: semver_tag

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:

  increment:
    name: 'Increment SemVer Value'
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'skip-release') == false &&
      github.event.pull_request.head.ref != 'semver_tag'
    runs-on: ubuntu-latest

    steps:
      - name: Parse the SemVer label
        id: label
        uses: UKHomeOffice/match-label-action@v1
        with:
          labels: minor,major,patch
          mode: singular

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Reset Branch from Main Version
        id: compare
        run: |
          localFile=$(cat package.json)
          originFile=$(git show origin/${{ inputs.mainLineBranchName }}:package.json)
          localVersion=$(echo $localFile | jq -r '.version')
          originVersion=$(echo $originFile | jq -r '.version')
          if [ "$localVersion" != "$originVersion" ]; then
            npm --no-git-tag-version version $originVersion
          fi
        shell: bash

      - name: Bump Release Version
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version ${{ steps.label.outputs.matchedLabels }})" >> $GITHUB_ENV
        shell: bash

      - name: Publish npm package
        run: |
          npm publish
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Tag Repository
        uses: UKHomeOffice/semver-tag-action@v3
        with:
          tag: ${{ env.NEW_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set PR data
        run: |
          echo "PR_TITLE=Release ${{ github.event.repository.name }} $NEW_VERSION" >> ${GITHUB_ENV}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        shell: bash

      - name: Create a branch
        run: |
          git checkout -b ${{ inputs.tagBranchName }}
          git add --all
          git commit -m "$PR_TITLE" -m "co-authored-by: $GITHUB_ACTOR <$GITHUB_ACTOR@users.noreply.github.com>"
          git fetch
          git pull --rebase origin ${{ inputs.mainLineBranchName }}
          git push --set-upstream origin ${{ inputs.tagBranchName }} --force
        shell: bash

      - name: Create a Package.json PR
        run: |
          gh pr edit ${{ inputs.tagBranchName }} --title "$PR_TITLE" && gh pr reopen ${{ inputs.tagBranchName }} || gh pr create --fill -B ${{ inputs.mainLineBranchName }} -H ${{ inputs.tagBranchName }}
          gh pr merge ${{ inputs.tagBranchName }} --auto --rebase
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
